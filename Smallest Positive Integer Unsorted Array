#Write a function:
#def solution(a)
#that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.
#For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.
#Given A = [1, 2, 3], the function should return 4.
#Given A = [-1, -3], the function should return 1.
#Write an efficient algorithm for the following assumptions:
#N is an integer within the range [1..100,000];
#each element of array A is an integer within the range [âˆ’1,000,000..1,000,000].

def solution(a)
    hash=Hash.new(0)
    new=a.sort_by(&:to_i)
    new.each do |num|
        hash[num]+=1
    end
    x=new[0]
    hash.each do |k,v|
        if k!=x && x==0
            return x+1
        elsif k!=x
            return x
        elsif x<0
            return 1
        end
        x+=1
    end
    return new[-1]+1
end
p solution([1, 3, 6, 4, 1, 2])
